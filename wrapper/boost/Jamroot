import python ;

BOOST_ROOT = C:/ShellEnv/j-tree/lib/cpp/boost_1_46_1 ;

if ! [ python.configured ]
{
    ECHO "notice: no Python configured in user-config.jam" ;
    ECHO "notice: will use default configuration" ;
    using python ;
}


# Specify the path to the Boost project.  If you move this project,
# adjust this path to refer to the Boost root directory.
use-project boost
  : $(BOOST_ROOT) ;

# Set up the project-wide requirements that everything uses the
# boost_python library from the project whose global ID is
# /boost/python.
project
  : requirements
    <library>/boost/python//boost_python
    <include>../../src
    <link>static
  ;

python-extension ntfslink : ../../src/ntfslink.cpp pyntfslink.cpp ;

# Put the extension and Boost.Python DLL in the current directory, so
# that running script by hand works.
install convenient_copy 
  : ntfslink 
  : <install-dependencies>on <install-type>SHARED_LIB <install-type>PYTHON_EXTENSION 
    <location>. 
  ;

# A little "rule" (function) to clean up the syntax of declaring tests
# of these extension modules.
# local rule run-test ( test-name : sources + )
# {
    # import testing ;
    # testing.make-test run-pyd : $(sources) : : $(test-name) ;
# }

# Declare test targets
#run-test hello : hello_ext hello.py ;
